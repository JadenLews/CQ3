import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'miniMaxSum' function below.
     *
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static void miniMaxSum(List<Integer> arr) {
    // Write your code here
    //find the sum of all the values in the list
    long sum = 0;
    for (int i = 0; i < arr.size(); i++){
        sum += arr.get(i);
    }
    //set max and min so first value will always be greater or smaller
    long max = Long.MIN_VALUE;
    long min = Long.MAX_VALUE;
    //cycle through each integer in list and get subtract it from sum to get the 4 sum, then check if its larger than max and if its less than min
    for (int m = 0; m < arr.size(); m++){
        long newsum = sum - arr.get(m);
        if (newsum < min){
            min = newsum;
        }
        if (newsum > max){
            max = newsum;
        }
    }
    System.out.println(min + " " + max);
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.miniMaxSum(arr);

        bufferedReader.close();
    }
}
